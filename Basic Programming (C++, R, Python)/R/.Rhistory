cat ("Z-table = ",z.alpha,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
} else if (keputusan == 2){
pval = pnorm(z, lower.tail=FALSE)
z.alpha = qnorm(1-alpha)
if (z >= z.alpha){
cat ("Z =",z,"\n")
cat ("Z-table = ",z.alpha,"\n")
print("Tolak H0")
} else {
cat ("Z =",z,"\n")
cat ("Z-table = ",z.alpha,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
} else{
z.alpha.kiri = qnorm(alpha/2)
z.alpha.kanan = qnorm(1-alpha/2)
if (z<z.alpha.kiri){
pval = 2*pnorm(z)
} else{
pval = 2*pnorm(z, lower.tail=FALSE)
}
if (z <= z.alpha.kiri || z >= z.alpha.kanan){
cat ("Z =",z,"\n")
cat ("Z-table =",z.alpha.kiri,z.alpha.kanan,"\n")
print("Tolak H0")
} else {
cat ("Z =",z,"\n")
cat ("Z-table =",z.alpha.kiri,z.alpha.kanan,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
}
}
Uji_Proporsi_Populasi(3, 12, 0.5, 0.05, 20)
# One - population Variance Test
# Pilihan
# 1. Lower Tail (H1: sigma^2 < sigma^20)
# 2. Upper Tail (H1: sigma^2 > sigma^20)
# 3. Two-tailed (H1: sigma^2 tidak sama dengan sigma^20)
Uji_Varian_Populasi = function(keputusan, samples_variance, p_variance, alpha, n){
chish = ((n-1)*samples_variance)/(p_variance)
# Menggunakan kondisi P-VALUE dengan Alpha
if (keputusan == 1){
pval = pchisq(chish, df=n-1)
chis.alpha = qchisq(alpha, df=n-1)
if (pval <= alpha){
cat ("Chi-square (Hitung) =",chish,"\n")
cat ("Chi-square table =",chis.alpha,"\n")
print("Tolak H0")
} else {
cat ("Chi-square (hitung) = ",chish,"\n")
cat ("Chi-square table = ",chis.alpha,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
} else if (keputusan == 2){
pval = pchisq(chish, df=n-1, lower.tail=FALSE)
chis.alpha = qchisq(1-alpha, df=n-1)
if (pval < alpha){
cat ("Chi-square (Hitung) =",chish,"\n")
cat ("Chi-square table =",chis.alpha,"\n")
print("Tolak H0")
} else {
cat ("Chi-square (hitung) = ",chish,"\n")
cat ("Chi-square table = ",chis.alpha,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
} else{
chis.alpha.kiri = qchisq(alpha/2, df=n-1)
chis.alpha.kanan = qchisq(1-alpha/2, df=n-1)
if (chish<chis.alpha.kiri){
pval = 2*pchisq(chish, df=n-1)
} else{
pval = 2*pchisq(chish, df=n-1, lower.tail=FALSE)
}
if (chish <= chis.alpha.kiri || chish >= chis.alpha.kanan){
cat ("Chi-square (Hitung) =",chish,"\n")
cat ("Chi-square table =",chis.alpha.kiri,chis.alpha.kanan,"\n")
print("Tolak H0")
} else {
cat ("Chi-square (Hitung) =",chish,"\n")
cat ("Chi-square table =",chis.alpha.kiri,chis.alpha.kanan,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
}
}
Uji_Varian_Populasi(3, 55^2, 60^2, 0.05, 30)
# One - population Variance Test
# Pilihan
# 1. Lower Tail (H1: sigma^2 < sigma^20)
# 2. Upper Tail (H1: sigma^2 > sigma^20)
# 3. Two-tailed (H1: sigma^2 tidak sama dengan sigma^20)
Uji_Varian_Populasi = function(keputusan, samples_variance, p_variance, alpha, n){
chish = ((n-1)*samples_variance)/(p_variance)
# Menggunakan kondisi P-VALUE dengan Alpha
if (keputusan == 1){
pval = pchisq(chish, df=n-1)
chis.alpha = qchisq(alpha, df=n-1)
if (pval <= alpha){
cat ("Chi-square (Hitung) =",chish,"\n")
cat ("Chi-square table =",chis.alpha,"\n")
print("Tolak H0")
} else {
cat ("Chi-square (hitung) = ",chish,"\n")
cat ("Chi-square table = ",chis.alpha,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
} else if (keputusan == 2){
pval = pchisq(chish, df=n-1, lower.tail=FALSE)
chis.alpha = qchisq(1-alpha, df=n-1)
if (pval < alpha){
cat ("Chi-square (Hitung) =",chish,"\n")
cat ("Chi-square table =",chis.alpha,"\n")
print("Tolak H0")
} else {
cat ("Chi-square (hitung) = ",chish,"\n")
cat ("Chi-square table = ",chis.alpha,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
} else{
chis.alpha.kiri = qchisq(alpha/2, df=n-1)
chis.alpha.kanan = qchisq(1-alpha/2, df=n-1)
if (chish<chis.alpha.kiri){
pval = 2*pchisq(chish, df=n-1)
} else if (chish>chis.alpha.kiri&&chish<chis.alpha.kanan){
pval = 2*pchisq(chish, df=n-1)
} else{
pval = 2*pchisq(chish, df=n-1, lower.tail = FALSE)
}
if (chish <= chis.alpha.kiri || chish >= chis.alpha.kanan){
cat ("Chi-square (Hitung) =",chish,"\n")
cat ("Chi-square table =",chis.alpha.kiri,chis.alpha.kanan,"\n")
print("Tolak H0")
} else {
cat ("Chi-square (Hitung) =",chish,"\n")
cat ("Chi-square table =",chis.alpha.kiri,chis.alpha.kanan,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
}
}
Uji_Varian_Populasi(3, 55^2, 60^2, 0.05, 30)
# Population Mean with Known Variance
# Pilihan
# 1. Lower Tail (H1: Miu < Xbar)
# 2. Upper Tail (H1: Miu > Xbar)
# 3. Two-tailed (H1: Miu tidak sama dengan Xbar)
Uji_Rata_Populasi = function(keputusan, xbar, miu0, sigma, alpha, n){
z = (xbar - miu0) / (sigma/sqrt(n))
if (keputusan == 1){
pval = pnorm(z)
z.alpha = qnorm(alpha)
if (z <= z.alpha){
cat ("Z =",z,"\n")
cat ("Z-table =",z.alpha,"\n")
print("Tolak H0")
} else {
cat ("Z = ",z,"\n")
cat ("Z-table = ",z.alpha,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
} else if (keputusan == 2){
pval = pnorm(z, lower.tail=FALSE)
z.alpha = qnorm(1-alpha)
if (z >= z.alpha){
cat ("Z =",z,"\n")
cat ("Z-table = ",z.alpha,"\n")
print("Tolak H0")
} else {
cat ("Z =",z,"\n")
cat ("Z-table = ",z.alpha,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
} else{
z.alpha.kiri = qnorm(alpha/2)
z.alpha.kanan = qnorm(1-alpha/2)
if (z<z.alpha.kiri){
pval = 2*pnorm(z)
} else if (z>z.alpha.kiri && z<z.alpha.kanan){
pval = 2*pnorm(z)
} else{
pval = 2*pnorm(z, lower.tail=FALSE)
}
if (z <= z.alpha.kiri || z >= z.alpha.kanan){
cat ("Z =",z,"\n")
cat ("Z-table =",z.alpha.kiri,z.alpha.kanan,"\n")
print("Tolak H0")
} else {
cat ("Z =",z,"\n")
cat ("Z-table =",z.alpha.kiri,z.alpha.kanan,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
}
}
Uji_Rata_Populasi(2, 14.6, 15.4, 2.5, 0.05, 35)
# Population Mean with Known Variance
# Pilihan
# 1. Lower Tail (H1: Miu < Xbar)
# 2. Upper Tail (H1: Miu > Xbar)
# 3. Two-tailed (H1: Miu tidak sama dengan Xbar)
Uji_Rata_Populasi = function(keputusan, xbar, miu0, sigma, alpha, n){
z = (xbar - miu0) / (sigma/sqrt(n))
if (keputusan == 1){
pval = pnorm(z)
z.alpha = qnorm(alpha)
if (z <= z.alpha){
cat ("Z =",z,"\n")
cat ("Z-table =",z.alpha,"\n")
print("Tolak H0")
} else {
cat ("Z = ",z,"\n")
cat ("Z-table = ",z.alpha,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
} else if (keputusan == 2){
pval = pnorm(z, lower.tail=FALSE)
z.alpha = qnorm(1-alpha)
if (z >= z.alpha){
cat ("Z =",z,"\n")
cat ("Z-table = ",z.alpha,"\n")
print("Tolak H0")
} else {
cat ("Z =",z,"\n")
cat ("Z-table = ",z.alpha,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
} else{
z.alpha.kiri = qnorm(alpha/2)
z.alpha.kanan = qnorm(1-alpha/2)
if (z<z.alpha.kiri){
pval = 2*pnorm(z)
} else if (z>z.alpha.kiri && z<z.alpha.kanan){
pval = 2*pnorm(z)
} else{
pval = 2*pnorm(z, lower.tail=FALSE)
}
if (z <= z.alpha.kiri || z >= z.alpha.kanan){
cat ("Z =",z,"\n")
cat ("Z-table =",z.alpha.kiri,z.alpha.kanan,"\n")
print("Tolak H0")
} else {
cat ("Z =",z,"\n")
cat ("Z-table =",z.alpha.kiri,z.alpha.kanan,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
}
}
Uji_Rata_Populasi(2, 2.1, 2, 0.25, 0.05, 35)
# Population Mean with Unknown Variance
# Pilihan
# 1. Lower Tail (H1: Miu < Xbar)
# 2. Upper Tail (H1: Miu > Xbar)
# 3. Two-tailed (H1: Miu tidak sama dengan Xbar)
Uji_Rata_Populasi = function(keputusan, xbar, miu0, sigma, alpha, n){
t = (xbar - miu0) / (sigma/sqrt(n))
if (keputusan == 1){
pval = pt(t, df=n-1)
t.alpha = qt(alpha, df=n-1)
if (t <= t.alpha){
cat ("t =",t,"\n")
cat ("t-table =",t.alpha,"\n")
print("Tolak H0")
} else {
cat ("t = ",t,"\n")
cat ("t-table = ",t.alpha,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
} else if (keputusan == 2){
pval = pt(t, df=n-1, lower.tail=FALSE)
t.alpha = qt(1-alpha, df=n-1)
if (t >= t.alpha){
cat ("t =",t,"\n")
cat ("t-table = ",t.alpha,"\n")
print("Tolak H0")
} else {
cat ("t =",t,"\n")
cat ("t-table = ",t.alpha,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
} else{
t.alpha.kiri = qt(alpha/2)
t.alpha.kanan = qt(1-alpha/2)
if (t<t.alpha.kiri){
pval = 2*pt(t)
} else if (t>t.alpha.kiri && t<t.alpha.kanan){
pval = 2*pt(t)
} else{
pval = 2*pt(t, lower.tail=FALSE)
}
if (t <= t.alpha.kiri || t >= t.alpha.kanan){
cat ("t =",t,"\n")
cat ("t-table =",t.alpha.kiri,t.alpha.kanan,"\n")
print("Tolak H0")
} else {
cat ("t =",t,"\n")
cat ("t-table =",t.alpha.kiri,t.alpha.kanan,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
}
}
# Population Mean with Unknown Variance
# Pilihan
# 1. Lower Tail (H1: Miu < Xbar)
# 2. Upper Tail (H1: Miu > Xbar)
# 3. Two-tailed (H1: Miu tidak sama dengan Xbar)
Uji_Rata_Populasi = function(keputusan, xbar, miu0, sigma, alpha, n){
t = (xbar - miu0) / (sigma/sqrt(n))
if (keputusan == 1){
pval = pt(t, df=n-1)
t.alpha = qt(alpha, df=n-1)
if (t <= t.alpha){
cat ("t =",t,"\n")
cat ("t-table =",t.alpha,"\n")
print("Tolak H0")
} else {
cat ("t = ",t,"\n")
cat ("t-table = ",t.alpha,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
} else if (keputusan == 2){
pval = pt(t, df=n-1, lower.tail=FALSE)
t.alpha = qt(1-alpha, df=n-1)
if (t >= t.alpha){
cat ("t =",t,"\n")
cat ("t-table = ",t.alpha,"\n")
print("Tolak H0")
} else {
cat ("t =",t,"\n")
cat ("t-table = ",t.alpha,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
} else{
t.alpha.kiri = qt(alpha/2)
t.alpha.kanan = qt(1-alpha/2)
if (t<t.alpha.kiri){
pval = 2*pt(t)
} else if (t>t.alpha.kiri && t<t.alpha.kanan){
pval = 2*pt(t)
} else{
pval = 2*pt(t, lower.tail=FALSE)
}
if (t <= t.alpha.kiri || t >= t.alpha.kanan){
cat ("t =",t,"\n")
cat ("t-table =",t.alpha.kiri,t.alpha.kanan,"\n")
print("Tolak H0")
} else {
cat ("t =",t,"\n")
cat ("t-table =",t.alpha.kiri,t.alpha.kanan,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
}
}
Uji_Rata_Populasi(1, 9900, 10000, 125, 0.05, 30)
# Population Mean with Unknown Variance
# Pilihan
# 1. Lower Tail (H1: Miu < Xbar)
# 2. Upper Tail (H1: Miu > Xbar)
# 3. Two-tailed (H1: Miu tidak sama dengan Xbar)
Uji_Rata_Populasi = function(keputusan, xbar, miu0, sigma, alpha, n){
t = (xbar - miu0) / (sigma/sqrt(n))
if (keputusan == 1){
pval = pt(t, df=n-1)
t.alpha = qt(alpha, df=n-1)
if (t <= t.alpha){
cat ("t =",t,"\n")
cat ("t-table =",t.alpha,"\n")
print("Tolak H0")
} else {
cat ("t = ",t,"\n")
cat ("t-table = ",t.alpha,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
} else if (keputusan == 2){
pval = pt(t, df=n-1, lower.tail=FALSE)
t.alpha = qt(1-alpha, df=n-1)
if (t >= t.alpha){
cat ("t =",t,"\n")
cat ("t-table = ",t.alpha,"\n")
print("Tolak H0")
} else {
cat ("t =",t,"\n")
cat ("t-table = ",t.alpha,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
} else{
t.alpha.kiri = qt(alpha/2)
t.alpha.kanan = qt(1-alpha/2)
if (t<t.alpha.kiri){
pval = 2*pt(t)
} else if (t>t.alpha.kiri && t<t.alpha.kanan){
pval = 2*pt(t)
} else{
pval = 2*pt(t, lower.tail=FALSE)
}
if (t <= t.alpha.kiri || t >= t.alpha.kanan){
cat ("t =",t,"\n")
cat ("t-table =",t.alpha.kiri,t.alpha.kanan,"\n")
print("Tolak H0")
} else {
cat ("t =",t,"\n")
cat ("t-table =",t.alpha.kiri,t.alpha.kanan,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
}
}
Uji_Rata_Populasi(3, 14.6, 15.4, 2.5, 0.05, 35)
# Population Mean with Unknown Variance
# Pilihan
# 1. Lower Tail (H1: Miu < Xbar)
# 2. Upper Tail (H1: Miu > Xbar)
# 3. Two-tailed (H1: Miu tidak sama dengan Xbar)
Uji_Rata_Populasi = function(keputusan, xbar, miu0, sigma, alpha, n){
t = (xbar - miu0) / (sigma/sqrt(n))
if (keputusan == 1){
pval = pt(t, df=n-1)
t.alpha = qt(alpha, df=n-1)
if (t <= t.alpha){
cat ("t =",t,"\n")
cat ("t-table =",t.alpha,"\n")
print("Tolak H0")
} else {
cat ("t = ",t,"\n")
cat ("t-table = ",t.alpha,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
} else if (keputusan == 2){
pval = pt(t, df=n-1, lower.tail=FALSE)
t.alpha = qt(1-alpha, df=n-1)
if (t >= t.alpha){
cat ("t =",t,"\n")
cat ("t-table = ",t.alpha,"\n")
print("Tolak H0")
} else {
cat ("t =",t,"\n")
cat ("t-table = ",t.alpha,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
} else{
t.alpha.kiri = qt(alpha/2, df=n-1)
t.alpha.kanan = qt(1-alpha/2, df=n-1)
if (t<t.alpha.kiri){
pval = 2*pt(t, df=n-1)
} else if (t>t.alpha.kiri && t<t.alpha.kanan){
pval = 2*pt(t, df=n-1)
} else{
pval = 2*pt(t, df=n-1, lower.tail=FALSE)
}
if (t <= t.alpha.kiri || t >= t.alpha.kanan){
cat ("t =",t,"\n")
cat ("t-table =",t.alpha.kiri,t.alpha.kanan,"\n")
print("Tolak H0")
} else {
cat ("t =",t,"\n")
cat ("t-table =",t.alpha.kiri,t.alpha.kanan,"\n")
print("Gagal tolak H0")
}
cat ("P-Value =",pval,"\n")
cat ("Alpha =",alpha,"\n")
}
}
Uji_Rata_Populasi(3, 14.6, 15.4, 2.5, 0.05, 35)
